---
# need to add NDN repository

## tasks file for NOC
## apt: name={{ item }} state=present
#
#- debug:
#    msg: "OS: {{ ansible_distribution }} major version: {{ ansible_distribution_major_version }} full version: {{ ansible_distribution_version }}"
#
#- name: create NOC directories
#  file: path=/home/ndnops/ndn-ops/NOC/ping_delay_tests state=directory owner=ndnops group=ndnops mode=0755
#
#- name: copy ndnping parallel test script
#  copy: dest=/home/ndnops/ndn-ops/NOC/ping_delay_tests/./getTestbedDelays_ndnping_parallel.sh  src=roles/NOC/files/./getTestbedDelays_ndnping_parallel.sh owner=ndnops group=ndnops mode=0755
#
- name: copy ndnping parallel test prefix list
  copy: dest=/home/ndnops/ndn-ops/NOC/ping_delay_tests/./full_prefix_list.txt  src=roles/NOC/files/./full_prefix_list.txt owner=ndnops group=ndnops mode=0644

- name: copy ndnping parallel test prefix list (UP)
  copy: dest=/home/ndnops/ndn-ops/NOC/ping_delay_tests/./full_prefix_list_UP.txt  src=roles/NOC/files/./full_prefix_list_UP.txt owner=ndnops group=ndnops mode=0644

##- cron: name="parallel ndn ping test" user="ndnops" state=present disabled=yes minute="15" job="cd /home/ndnops/ndn-ops/NOC/ping_delay_tests; ./getTestbedDelays_ndnping_parallel.sh -c 300 -n {{ inventory_hostname }} "
#
#- cron: name="parallel ndn ping test" user="ndnops" state=present disabled=no minute="15" job="cd /home/ndnops/ndn-ops/NOC/ping_delay_tests; ./getTestbedDelays_ndnping_parallel.sh -c 300 -n {{ inventory_hostname }} "
#
#- name: add ndn repository
#  apt_repository: repo='ppa:named-data/ppa' state=present
#
#- name: install general ubuntu packages 
#  action: >
#       {{ ansible_pkg_mgr }} name={{ item }} state=latest update_cache=yes
#  with_items:
#       - build-essential
#       - git
#       - openssl 
#       - python-openssl 
#       - libssl-dev 
#       - expat 
#       - libexpat-dev 
#       - libpcap-dev
#       - gawk 
#       - texinfo 
#       - asciidoc 
#       - finger
#       - python-software-properties
#       - software-properties-common
#       - ntp
#       - autoconf 
#       - libtool
#       - python-dev
#       - g++ 
#       - autotools-dev 
#       - libicu-dev 
#       - libbz2-dev  
#       - sqlite3
#       - pkg-config
#       - libssl-dev 
#       - libsqlite3-dev 
#       - libcrypto++-dev
#       - aptitude
#       - python3-dev
#       - python3-setuptools
#       - python3-pip
#       - fail2ban
#       - liblog4cxx10*
#
##       - liblog4cxx10
##         when {{ ansible_distribution_major_version }} == 14 
##       - liblog4cxx10v5
##         when {{ ansible_distribution_major_version }} == 16 
#
##- name: install base ndn libraries 
##  action: >
##       {{ ansible_pkg_mgr }} name={{ item }} state=latest update_cache=yes
##  with_items:
##       - ndn-cxx
##       - ndn-cxx-dev
#
##- name: remove python3 stuff
##  apt: 
##    name: python3-dev python3-setuptools 
##    state: absent 
##    purge: yes
#
##- command: aptitude -y install python3-dev python3-setuptools
##  become: yes
##  become_user: root
#
##- command: /usr/bin/easy_install3 pip
##  become: yes
##  become_user: root
#
##- pip: name=requests executable=/usr/local/bin/pip3
#
##- pip: name=requests,pyndn executable=/usr/local/bin/pip3
#
##- pip: name=pyndn executable=/usr/local/bin/pip3
#
#- name: copy ndnop-process-requests to TESTBED
#  copy: dest=/usr/local/bin/ndnop-process-requests src=roles/NOC/files/ndnop-process-requests.testbed owner=root group=root mode=0755
#  when: inventory_hostname != "UCLA"
#
#- name: copy ndnop-process-requests to UCLA
#  copy: dest=/usr/local/bin/ndnop-process-requests src=roles/NOC/files/ndnop-process-requests.ucla owner=root group=root mode=0755
#  when: inventory_hostname == "UCLA"
#
#
